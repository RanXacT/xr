// ######################################################################################### - FILE
/*!

\author Daniel Craig \par Copyright 2016, All Rights reserved.
*/
// ######################################################################################### - FILE

// ######################################################################################### - FILE
/* Includes */
// ######################################################################################### - FILE
#ifndef XR_DEFINES_H
#include "xr/defines.h"
#endif
#ifndef XR_CORE_RANDOM_MERSENNE_H
#include "xr/core/random/mersenne.h"
#endif
#ifndef XR_CORE_ASSERT_H
#include "xr/core/assert.h"
#endif
#ifndef XR_CORE_TEST_H
#include "xr/core/test.h"
#endif
#ifndef XR_CORE_BIT_UTILS_H
#include "xr/core/bit_utils.h"
#endif
// ######################################################################################### - FILE
/* Unit Tests                                                                */
// ######################################################################################### - FILE
#if defined(XR_TEST_FEATURES_ENABLED)

// ######################################################################################### - FILE
// ######################################################################################### - FILE
XR_UNITTEST_GROUP_BEGIN( Mersenne )

// --------------------------------------------------------------------------------------  FUNCTION
/*!  */
// --------------------------------------------------------------------------------------  FUNCTION
XR_UNITTEST_TEST_FUNC( basic )
{
    // This does not test randomness, just makes sure calls work and that
    // with a given seed value that output is reproducible.
    xr::Core::MersenneTwisterPRNG rng;
    uint32_t word;

    // Without an explicit seed, results should be reproducible
    word = rng.Next();
    XR_ASSERT_ALWAYS_EQ(word, XR_UINT32_C(3499211612) );
    word = rng.Next();
    XR_ASSERT_ALWAYS_EQ(word, XR_UINT32_C(581869302)  );

    {
        // This should return a truly random seed.
        uint32_t seedCheck = rng.SeedRandomReproducible();
        uint32_t wordCheck = rng.Next();

        // This should be even more random
        rng.SeedRandom();
        word = rng.Next();

        // Should be able to reproduce the previous random number
        // by replacing the seed.
        rng.Seed(seedCheck);
        word = rng.Next();

        XR_ASSERT_ALWAYS_EQ(word, wordCheck );
    }

    {
        // This should return a truly random seed.
        uint32_t seedCheck = rng.SeedRandomReproducible();
        uint32_t saltCheck = 13944193; // Random number...
        rng.Salt(saltCheck);
        uint32_t wordCheck = rng.Next();

        // This should be even more random
        rng.SeedRandom();
        word = rng.Next();

        // Should be able to reproduce the previous random number
        // by replacing the seed.
        rng.Seed(seedCheck);
        rng.Salt(saltCheck);
        word = rng.Next();
        XR_ASSERT_ALWAYS_EQ(word, wordCheck );
    }

    {
        // This should return a truly random seed.
        uint32_t seedCheck = rng.SeedRandomReproducible();
        const uint32_t saltCheck []= {
            311682283	,63355023	,171450076	,316591899	,384077606,
            164103937	,192263412	,273125946	,276601831	,270705984,
            200031511	,149786610	,277234365	,306397115	,92352101 ,
            118504910	,222452538	,174365448	,183975678	,324231156,
            299448234	,312011335	,299870801	,345304652	,223279852,
            258075110	,248824007	,27283834	,10409661	,344768917,
            220416075	,252120463	,168673593	,248411722	,161428598,
            328966126	,209654377	,246207719	,335352250	,31167788 ,
            99330558	,360419807	,17270923	,89307257	,316074355,
            135781816	,284176817	,134634794	,262855384	,350687246
        };
        const size_t saltCheckSize = XR_ARRAY_SIZE(saltCheck);
        rng.Salt(saltCheck, saltCheckSize);
        uint32_t wordCheck = rng.Next();

        // This should be even more random
        rng.SeedRandom();
        word = rng.Next();

        // Should be able to reproduce the previous random number
        // by replacing the seed.
        rng.Seed(seedCheck);
        rng.Salt(saltCheck, saltCheckSize);
        word = rng.Next();
        XR_ASSERT_ALWAYS_EQ(word, wordCheck );
    }

    {
        // This should return a truly random seed.
        uint32_t seedCheck = rng.SeedRandomReproducible();
        const uint32_t saltCheck []= {
            40807803,	362716683,	325455435,	53218725,	167355545,
            174520874,	228796586,	179255460,	173534742,	386569495,
            106803807,	104468422,	184431011,	216852154,	332218161,
            96776223,	277084021,	51394376,	276476542,	393886358,
            302634673,	61985080,	172884184,	62732521,	246455076,
            226641322,	366867286,	360972409,	346408572,	231653965,
            323548299,	75723259,	182607355,	170941007,	281924871,
            313326778,	306366402,	109965245,	308841277,	281682624,
            10629063,	317848971,	295465534,	84210141,	364930985,
            108165638,	94130790,	344570951,	191673609,	78975889,
            193106265,	308211742,	381561091,	12842900,	50783967,
            204173149,	61731014,	166519768,	368900481,	397077779,
            19350630,	207438645,	83520316,	350708157,	364236931,
            40417664,	61245999,	35296508,	276635161,	196907074,
            219035754,	336663572,	70833801,	219106350,	113685289,
            395200118,	352283165,	344678929,	87426396,	279994916,
            114173424,	103547503,	271286314,	194273029,	39697366,
            132390991,	393562549,	117250683,	132426980,	97587571,
            173187666,	306246601,	234890775,	142809414,	397354876,
            115964387,	351138853,	323498309,	113895193,	186363849,
            342724449,	209286093,	37812651,	340613770,	147017545,
            261284138,	366997207,	350181055,	60926387,	217819827,
            112100878,	280337903,	226276912,	307218134,	171996137,
            294095605,	204476008,	347083774,	101339174,	166278216,
            334452904,	140353728,	75094078,	353948113,	144269279,
            238639841,	178345450,	153883053,	39013936,	325068387,
            224339896,	90255820,	200801886,	307026918,	66727638,
            397923573,	225926621,	193473790,	32699240,	297062863,
            307755447,	187499872,	155931037,	116712988,	243188460,
            262806494,	306543895,	284293062,	188433789,	340421294,
            349979965,	140392335,	167429742,	182384413,	161446816,
            285944783,	301914146,	344885509,	372029107,	333692451,
            90882049,	184248754,	348207970,	313474517,	4488258,
            395983438,	360940142,	301976757,	168680112,	173378813,
            35589147,	136716711,	41730337,	220859262,	204614593,
            76544766,	65807859,	127382951,	106930791,	389497459,
            47158806,	371974523,	31816468,	65466853,	115018376,
            63020847,	365143019,	394033522,	261364655,	113615761,
            253495175,	361428913,	338732522,	397318964,	13306853,
            28604514,	161733088,	271828926,	252208925,	20642970,
            288745824,	289103071,	384257250,	168633926,	94216334,
            28599418,	176190369,	127028111,	288660231,	209097546,
            371869108,	183558165,	72606402,	81124028,	368108685,
            35581053,	239642394,	54465286,	334761800,	32876053,
            254551284,	298923185,	378943461,	351179005,	122464598,
            184538723,	36631080,	44326064,	151880782,	372400386,
            198610046,	290611171,	92428215,	21338833,	280797564,
            309561610,	25135458,	134491967,	60344791,	76122870,
            50093308,	16027514,	2775567,	296923637,	174542408,
            326658635,	52591116,	17386036,	13445346,	370652383,
            240091207,	284343937,	169669918,	253033260,	356618461,
            241332525,	59944685,	319051768,	321413166,	193856943,
            378436712,	49918296,	265105789,	399648323,	73447933,
            161248576,	291442347,	362431632,	277340332,	30360778,
            346734703,	202943055,	393884246,	115195337,	54901440,
            238646055,	33212305,	165719695,	22183565,	181388778,
            140633747,	154409316,	216006656,	303089189,	305267690,
            261661257,	357571782,	186574180,	265989320,	133425369,
            310285218,	204316381,	383123422,	180989132,	343527107,
            295565895,	88426911,	68209967,	156197238,	220793880,
            212009092,	279370829,	245930300,	254987974,	339383292,
            127329939,	296182150,	351107118,	374267455,	294722193,
            361610606,	266343355,	84654583,	335161991,	272244540,
            135835056,	313782486,	205777004,	146330270,	227226535,
            99349666,	328546546,	195595687,	352893444,	246908281,
            135632425,	366162855,	177661492,	233135279,	326707627,
            221317255,	390391844,	186142894,	171791526,	217067629,
            367365749,	50711012,	42298838,	46015281,	179645660,
            8524138,	60746020,	280557287,	177928189,	389280497,
            241494978,	225686072,	307956470,	174006880,	20280514,
            140571390,	109239133,	64950591,	232932889,	294486747,
            350272527,	272241514,	290052260,	386776077,	238211331,
            349028371,	378989567,	231289421,	302918782,	356525209,
            82712284,	243541668,	340960280,	39757476,	101274632,
            45308516,	47436927,	357872080,	39219966,	214009149,
            388657533,	169725850,	203385714,	186750223,	66925531,
            271732641,	309765476,	364922664,	23462845,	154291576,
            353558984,	136353835,	16649298,	56583207,	103154686,
            173428017,	139901214,	190372401,	344183241,	177561484,
            42727617,	120590376,	61706524,	242163006,	97404924,
            161305142,	309277527,	202277397,	183825884,	385114287,
            303748261,	377315198,	21194626,	352248350,	191271785,
            380739874,	165682227,	105055527,	120918679,	131671017,
            224700308,	112267378,	331392057,	82104690,	201998424,
            152374484,	328324009,	182153814,	150829661,	266164496,
            205604954,	315051530,	45736565,	269536579,	394262032,
            163856432,	103097039,	178027539,	243186485,	284551774,
            22434136,	24098595,	70616012,	358705422,	78849428,
            301264296,	244762018,	333151980,	382944563,	285239403,
            357174998,	7583019,	258711441,	128398998,	74692772,
            373389689,	365009683,	75971695,	259693527,	174816176,
            372166935,	325098621,	177563261,	309687671,	145037941,
            70521395,	291040611,	4601669,	330132493,	43880263,
            395317992,	181081984,	17687926,	344004841,	13893334,
            22129821,	1118894,	7030454,	145666386,	292618065,
            202577756,	150725871,	298740189,	109392392,	182148560,
            323479891,	149461086,	63061980,	133295602,	155909492,
            351519578,	216312553,	178587008,	249268974,	171788151,
            387565605,	52615335,	19248024,	337701236,	76555881,
            367824220,	251809098,	154322867,	142330018,	109603124,
            125044022,	88548356,	238023129,	255307887,	291801786,
            376054190,	270523018,	284147538,	142042446,	98868483,
            390740459,	23661092,	152255217,	101196867,	245723783,
            4124505,	55634790,	382303248,	168595555,	235564117,
            307961290,	371257155,	76288650,	324403728,	233271540,
            41047008,	180383048,	50402312,	335008564,	373255864,
            279957986,	229053657,	212166191,	13209218,	257960790,
            50822834,	240886466,	194013191,	267944380,	362813914,
            230124302,	233425966,	346434079,	322934606,	127456483,
            126818073,	297167115,	91536309,	137797738,	155841496,
            351998925,	85666867,	168079175,	104814293,	325931487,
            87394010,	246842772,	386394799,	62778081,	41501027,
            286985915,	32847148,	104713253,	304602244,	347297622,
            111378426,	88913234,	231908705,	98909455,	115322231,
            199597010,	268113112,	33115345,	355353371,	319993633,
            198930813,	366895646,	79643119,	65776320,	381876402,
            337471891,	134126822,	249388766,	138638893,	299037124,
            227633215,	249026237,	173772508,	180467311,	339910256,
            362351579,	58323628,	327032940,	47922333,	364409634,
            292842948,	236494751,	68918374,	243836501,	211233298,
            148512964,	163689061,	117511415,	41359521,	202752539,
            58016814,	82073381,	346273420,	187386327,	47772324,
            118352751,	92157953,	225070707,	326918438,	256689047,
            216765890,	51138068,	266712238,	363763135,	342660437,
            53798500,	38317292,	228345028,	275180821,	293627617,
            205517154,	13648146,	349360984,	82447729,	183958089,
            113617559,	398546486,	379160486,	191566119,	396375260,
            342976118,	114504726,	246639223,	11517889,	304682313,
            399497775,	80178175,	315363479,	392161525,	153972548,
            75562059,	357866788,	182906573,	382156724,	85408835,
            121483262,	296806344,	199429767,	176072348,	267824791,
            100734947,	33313490,	99866857,	84063921,	333584619,
            114807843,	251235016,	58631158,	187422,	133514468,
            96379297,	7193762,	319228998,	144372869,	169723961,
            251518261,	289135511,	211440174,	306349995,	51994907,
            61561809,	311601381,	398846321,	346710343,	314522947,
            364388616,	10821377,	344186540,	5217655,	377293215,
            125662793,	259979719,	22757592,	377198855,	190793750,
            205586915,	111090854,	311067398,	233106279,	5326897,
            297663080,	147720019,	311403486,	63107661,	85788001,
            204777058,	257076828,	189334842,	353223337,	347695569,
            201469220,	95350493,	364461297,	288298446,	309717167,
            93544368,	60511443,	394214908,	71711124,	311879386,
            23570145,	145468068,	115504283,	304049322,	158868845,
            116390440,	304284537,	220054096,	164737797,	318635795,
            216959186,	370650752,	273231242,	191500213,	63381111,
            394238671,	264792485,	243739372,	231519252,	338586381,
            114630919,	54321231,	54357296,	361868416,	301295538,
            40227053,	229533709,	330870765,	200711237,	308139891,
            14907767,	20939755,	212198674,	96504270,	267592033,
            128377537,	74436390,	131180907,	114503930,	7741879,
            60602759,	366600666,	249744222,	383229432,	23276194,
            204675278,	280432888,	399423843,	57532781,	260898920,
            43090806,	342029316,	235600560,	349409782,	15721142,
            271043040,	315570248,	311312537,	216289075,	130845699,
            29873451,	250755652,	31674681,	121063565,	154423778,
            268729943,	145013315,	209911111,	5338807,	22082325,
            160394652,	140731086,	378357086,	314419328,	3571782,
            43763019,	246447941,	164388633,	278916672,	39323816,
            359436533,	317965726,	202598770,	234228844,	274921699,
            312093994,	251126681,	308370785,	198448472,	136661146,
            290407383,	320214677,	270113379,	394387099,	300288790,
            246656253,	58824764,	136391980,	321337673,	305964517,
            43875112,	75143325,	346668988,	73399764,	207649755,
            45157540,	361663514,	168369395,	238878495,	358567407,
            207726118,	116355336,	32861409,	84763046,	28838779,
            315768049,	315896590,	155963104,	260976696,	200532640,
            380517703,	141353506,	61414560,	191441568,	61693105,
            384931582,	61386072,	18404980,	219814542,	18804909,
            20970244,	255444431,	255997667,	170163806,	296479668,
            278673203,	97382520,	94566462,	395503747,	345369738,
            68270365,	336994972,	368989532,	142977884,	252348677,
            9926623,	98384116,	280303625,	364206654,	131333393,
            254177282,	103915852,	347606824,	97073385,	73024811,
            41487555,	233503943,	233075297,	155700431,	132305746,
            287465000,	248701519,	152083834,	147998329,	199606280,
            40241057,	393503039,	308333753,	140389649,	58073492,
            78494498,	215918755,	238883922,	285629604,	390908248,
            47223065,	318133002,	332828345,	339803453,	351361499,
            204038681,	65875839,	28226526,	315274360,	372132517,
            135841441,	254669210,	45494139,	114841720,	236639240,
            162786541,	386596038,	351792540,	338052698,	9559331,
            67354310,	333681698,	151826370,	332459146,	27976385,
            17803987,	75258702,	241616466,	301794136,	352671808,
            121809661,	268511527,	270037547,	354102794,	351029980,
            332888976,	206164795,	266051385,	26065991,	181921021,
            397365929,	250512659,	121610837,	383215886,	279785801,
            155691293,	352954348,	109165620,	234191827,	33381003,
            21991033,	57496638,	385137006,	63141165,	151227984,
            81813771,	117202832,	20806342,	377666316,	122194233,
            389627911,	64679315,	64560980,	336923894,	147476644,
            165278362,	125033973,	363618934,	15020084,	315859374,
            54200238,	176071657,	13014170,	130300131,	160936494,
            11473660,	193182070,	225256952,	47379315,	31022483,
            308556001,	87515905,	378270216,	365060668,	38010497,
            237514955,	222996535,	254871169,	256473822,	50395595,
            373922316,	248347090,	12565010,	241484072,	253237316,
            180260337,	395417142,	318031543,	211658562,	304767853,
            112810396,	257333555,	102185179,	279245678,	147657315,
            373749524,	17175753,	386186509,	386017781,	126173701
        };
        const size_t saltCheckSize = XR_ARRAY_SIZE(saltCheck);
        rng.Salt(saltCheck, saltCheckSize);
        uint32_t wordCheck = rng.Next();

        // This should be even more random
        rng.SeedRandom();
        word = rng.Next();

        // Should be able to reproduce the previous random number
        // by replacing the seed.
        rng.Seed(seedCheck);
        rng.Salt(saltCheck, saltCheckSize);
        word = rng.Next();
        XR_ASSERT_ALWAYS_EQ(word, wordCheck );
    }

}


XR_UNITTEST_GROUP_END()

#endif // #if defined(XR_TEST_FEATURES_ENABLED)
